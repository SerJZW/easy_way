{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zemzh\\\\Desktop\\\\easy_way\\\\frontend\\\\src\\\\pages\\\\CreateMethodology.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axiosInstance';\nimport { useUser } from '../hooks/useUser';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateMethodology() {\n  _s();\n  const user = useUser();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: '',\n    content: ''\n  });\n  const [competencies, setCompetencies] = useState([]);\n  const [selectedCompetencies, setSelectedCompetencies] = useState([]);\n  useEffect(() => {\n    if (!user) return;\n    axios.get('/accounts/roles'); // Just to trigger auth and check role\n    axios.get('/methodologies'); // Optionally preload user’s own methods\n    axios.get('/competencies').then(res => setCompetencies(res.data));\n  }, [user]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const toggleCompetency = id => {\n    setSelectedCompetencies(prev => prev.includes(id) ? prev.filter(c => c !== id) : [...prev, id]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/methodologies', form);\n      const methodology_id = res.data.methodology_id;\n      if (selectedCompetencies.length) {\n        await axios.post(`/methodologies/${methodology_id}/competencies`, {\n          competency_ids: selectedCompetencies\n        });\n      }\n      alert('Методология успешно создана!');\n      navigate('/methodologies');\n    } catch (err) {\n      alert('Ошибка при создании методологии');\n    }\n  };\n  if (!user || !['Учитель', 'Руководитель'].includes(user.role_name)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F \\u0437\\u0430\\u043F\\u0440\\u0435\\u0449\\u0451\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 / \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043F\\u0435\\u0442\\u0435\\u043D\\u0446\\u0438\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: competencies.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedCompetencies.includes(c.id),\n            onChange: () => toggleCompetency(c.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), c.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043C\\u0435\\u0442\\u043E\\u0434\\u043E\\u043B\\u043E\\u0433\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateMethodology, \"5XvGDYIAlcu9B+8uzEna9I2JhXY=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = CreateMethodology;\nexport default CreateMethodology;\nvar _c;\n$RefreshReg$(_c, \"CreateMethodology\");","map":{"version":3,"names":["React","useEffect","useState","axios","useUser","useNavigate","jsxDEV","_jsxDEV","CreateMethodology","_s","user","navigate","form","setForm","name","content","competencies","setCompetencies","selectedCompetencies","setSelectedCompetencies","get","then","res","data","handleChange","e","target","value","toggleCompetency","id","prev","includes","filter","c","handleSubmit","preventDefault","post","methodology_id","length","competency_ids","alert","err","role_name","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","map","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/zemzh/Desktop/easy_way/frontend/src/pages/CreateMethodology.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axiosInstance';\r\nimport { useUser } from '../hooks/useUser';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CreateMethodology() {\r\n  const user = useUser();\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({ name: '', content: '' });\r\n  const [competencies, setCompetencies] = useState([]);\r\n  const [selectedCompetencies, setSelectedCompetencies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    axios.get('/accounts/roles'); // Just to trigger auth and check role\r\n    axios.get('/methodologies');  // Optionally preload user’s own methods\r\n    axios.get('/competencies').then(res => setCompetencies(res.data));\r\n  }, [user]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const toggleCompetency = (id) => {\r\n    setSelectedCompetencies(prev =>\r\n      prev.includes(id) ? prev.filter(c => c !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/methodologies', form);\r\n      const methodology_id = res.data.methodology_id;\r\n\r\n      if (selectedCompetencies.length) {\r\n        await axios.post(`/methodologies/${methodology_id}/competencies`, {\r\n          competency_ids: selectedCompetencies\r\n        });\r\n      }\r\n\r\n      alert('Методология успешно создана!');\r\n      navigate('/methodologies');\r\n    } catch (err) {\r\n      alert('Ошибка при создании методологии');\r\n    }\r\n  };\r\n\r\n  if (!user || !['Учитель', 'Руководитель'].includes(user.role_name)) {\r\n    return <p>Доступ запрещён</p>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Создание методологии</h2>\r\n\r\n      <input name=\"name\" placeholder=\"Название\" onChange={handleChange} required />\r\n      <textarea name=\"content\" placeholder=\"Описание / содержание\" onChange={handleChange} />\r\n\r\n      <h4>Выберите компетенции:</h4>\r\n      <ul>\r\n        {competencies.map(c => (\r\n          <li key={c.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedCompetencies.includes(c.id)}\r\n                onChange={() => toggleCompetency(c.id)}\r\n              />\r\n              {c.name}\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button type=\"submit\">Создать методологию</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateMethodology;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}